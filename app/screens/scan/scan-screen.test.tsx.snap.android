// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Scan screen should match snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <GestureHandlerRootView
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "timing",
                  "config": Object {
                    "duration": 150,
                    "easing": [Function],
                  },
                },
                "open": Object {
                  "animation": "timing",
                  "config": Object {
                    "duration": 350,
                    "easing": [Function],
                  },
                },
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              needsOffscreenAlphaCompositing={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "opacity": 1,
                    "transform": Array [
                      Object {
                        "translateY": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flex": 1,
                            "justifyContent": "center",
                            "margin": 16,
                          }
                        }
                      >
                        <Text
                          appearance="default"
                          category="h6"
                          status="primary"
                          style={
                            Array [
                              Object {
                                "color": "#2673E8",
                                "fontFamily": "System",
                                "fontSize": 18,
                                "fontWeight": "800",
                              },
                              Object {
                                "textAlign": "center",
                              },
                            ]
                          }
                        >
                          Requesting camera permissions...
                        </Text>
                      </View>
                    </View>
                    <View
                      pointerEvents="box-none"
                    >
                      <View
                        accessibilityElementsHidden={false}
                        importantForAccessibility="auto"
                        onLayout={[Function]}
                        pointerEvents="box-none"
                        style={null}
                      >
                        <View
                          pointerEvents="box-none"
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                              "zIndex": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "backgroundColor": "rgb(255, 255, 255)",
                                "borderBottomColor": "rgb(216, 216, 216)",
                                "elevation": 4,
                                "flex": 1,
                                "shadowColor": "rgb(216, 216, 216)",
                              }
                            }
                          />
                        </View>
                        <View
                          pointerEvents="box-none"
                          style={
                            Object {
                              "height": 56,
                              "maxHeight": undefined,
                              "minHeight": undefined,
                              "opacity": undefined,
                              "transform": undefined,
                            }
                          }
                        >
                          <View
                            pointerEvents="none"
                            style={
                              Object {
                                "height": 0,
                              }
                            }
                          />
                          <View
                            pointerEvents="box-none"
                            style={
                              Object {
                                "alignItems": "center",
                                "flex": 1,
                                "flexDirection": "row",
                                "justifyContent": "center",
                              }
                            }
                          >
                            <View
                              pointerEvents="box-none"
                              style={
                                Object {
                                  "left": 16,
                                  "position": "absolute",
                                  "right": 16,
                                }
                              }
                            >
                              <Text
                                accessibilityRole="header"
                                aria-level="1"
                                numberOfLines={1}
                                onLayout={[Function]}
                                style={
                                  Object {
                                    "color": "rgb(28, 28, 30)",
                                    "fontFamily": "sans-serif-medium",
                                    "fontSize": 20,
                                    "fontWeight": "normal",
                                  }
                                }
                              >
                                register
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </GestureHandlerRootView>
  </View>
</RNCSafeAreaProvider>
`;
